{\rtf1\ansi\ansicpg1252\cocoartf1187
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 LucidaGrande;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww32400\viewh19220\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs72 \cf0 Categories for Extending a Core Class\
\
You want to add colors to the UIColor class. There are currently 15 different preset colors that can be used, but that's not good enough for you. You REALLY like yellow, and just yellowColor isn't going to cut it. You also want amber, aureolin, and citrine (thanks, <a href="http://en.wikipedia.org/wiki/Category:Shades_of_yellow"> Wikipedia</a>). Instead of memorizing the RGB values and using them with <a href="http://developer.apple.com/library/ios/#documentation/uikit/reference/UIColor_Class/Reference/Reference.html">colorWithRed</a> every time, you want to be able to reference them by name with amberColor, aureolinColor, and citrineColor.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural
\cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 This is a perfect task for categories. Let's open Xcode. We'll start with a plain vanilla Single View Application:\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\fs24 \cf0 {{\NeXTGraphic Screen Shot 2013-07-02 at 8.54.49 PM.png \width30280 \height21320
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\fs72 \cf0 \
Hit the "Next" button. Enter whatever you fancy for the product name, check "Use Storyboards" and "Use Automatic Reference Counting". Keep "Include Unit Tests" unchecked. When the project is ready to go, hit "Next" to create the project and create a new file with 
\f1 \uc0\u8984 
\f0  + N. We're going to create an Objective-C category by navigating to Cocoa Touch in the left pane of the New File Window and selecting "Objective-C category":
\fs24 {{\NeXTGraphic Screen Shot 2013-07-02 at 9.12.56 PM.png \width30280 \height21320
}¬}
\fs72 \
In the "Category" field, enter something descriptive of what we're creating, perhaps "MoreYellow". The "Category on" field is more important. This is the class we will be adding functionality to. Begin typing "UIColor" and it should autocomplete for you:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\fs24 \cf0 {{\NeXTGraphic Screen Shot 2013-07-02 at 9.27.49 PM.png \width30280 \height21320
}¬}\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\fs72 \cf0 \
If they're not already in there, go ahead and drag and drop these new "UIColor+MoreYellow.h" and "UIColor+MoreYellow.m" files into the "Supporting Files" folder for organizational purposes.\
\
In our "UIColor+MoreYellow.h" file, we'll create the function prototype for the first new shade of yellow we want:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\fs24 \cf0 {{\NeXTGraphic Screen Shot 2013-07-15 at 1.52.34 PM.png \width30280 \height21320
}¬}
\fs72 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural
\cf0 Notice this function has a + in front of it to denote it is a class method. Class methods are called upon a class instead of an instance variable of a class. What does this mean? Time for a little diversion.\
\
Let's say we're setting the background color of our view. We would do this with\
\
self.view.backgroundColor = [UIColor redColor];\
 \
Self is the current ViewController we are working with. redColor is a message being sent to (or a "method being called upon") the UIColor class.\
\
Now let's say we want to get the number of items in an array. There is a message called count that will do this for us. However, we can't send the count message directly to the NSArray class because the NSArray class itself does not hold any items. It is merely a blueprint for NSArray instances (or "objects"). Only instances of NSArray can hold items. We could do the following:\
\
Correct\
NSArray *items = [[NSArray alloc] initWithObjects: @"first item", @"second item", nil];\
NSLog(@"%d", [items count]);\
\
Incorrect - the NSArray class itself doesn't hold any items.\
NSLog(@"%d", [NSArray count]);\
\
count is a message being sent to items, which is an instance of the NSArray class. In this case, count will return the value 2.\
\
%d is the specifier for integers, which is what the count method returns (specifically a NSUInteger, or unsigned integer).\
\
/diversion\
\
We just declared the function in "UIColor+MoreYellow.h". Now let's define the function in "UIColor+MoreYellow.m".
\fs24 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural
\cf0 {{\NeXTGraphic Screen Shot 2013-07-15 at 1.54.22 PM.png \width30280 \height21320
}¬}
\fs72 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural
\cf0 The RGB value for amber is (255, 190, 0). Because the colorWithRed method takes float values between 0 and 1, we have to divide our red, green, and blue values by 255.0. The red value is 255.0/255.0 = 1.0. The green value is 190.0/255.0. The blue value is 0/255.0 = 0.	\
We'll repeat this process in the .h and .m files for aureolinColor and citrineColor using the appropriate RGB values: \
 
\fs24 {{\NeXTGraphic Screen Shot 2013-07-15 at 1.56.03 PM.png \width30280 \height21320
}¬}
\fs72 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\fs24 \cf0 {{\NeXTGraphic Screen Shot 2013-07-15 at 1.56.30 PM.png \width30280 \height21320
}¬}
\fs72 \
We can now reference these colors in our ViewController.m file by simply importing "UIColor+MoreYellow.h":\

\fs24 {{\NeXTGraphic Screen Shot 2013-07-15 at 1.57.24 PM.png \width30280 \height21320
}¬}
\fs72 \
Boom. The background color of our view is set to a random color from our new selections.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural
\cf0 \
\
\
\
\
\
\
\
}